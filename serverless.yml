service: garmin-api
frameworkVersion: "2"
useDotenv: true

provider:
  name: aws
  runtime: python3.8
  logs:
    httpApi: true
  stage: ${env:STAGE}
  region: ${env:REGION}
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${env:NAME_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${env:ACTIVITY_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${env:STATS_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${env:HEART_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${env:STEPS_TABLE}"

functions:
  app:
    handler: main.handler
    events:
      - http: ANY /
      - http: ANY /{proxy+}

custom:
  pythonRequirements:
    dockerizePip: non-linux

package:
  exclude:
    - node_modules/**
    - __pycache__/**

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
  - serverless-offline
